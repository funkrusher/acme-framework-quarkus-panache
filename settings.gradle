pluginManagement {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        mavenLocal()
    }
    plugins {
        id "io.quarkus" version '3.21.4'
        id "org.liquibase.gradle" version "2.0.2"
    }
}

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // versions
            version('quarkus', '3.21.4')
            version('mariadb-java-client', '3.3.3')
            version('rest-assured', '5.4.0')
            version('awaitility', '4.2.1')
            version('jackson', '2.17.0')

            // jackson (which are not already included in quarkus-jackson
            library('jacksonCsv', 'com.fasterxml.jackson.dataformat', 'jackson-dataformat-csv').versionRef('jackson')
            library('jacksonJsr310', 'com.fasterxml.jackson.datatype', 'jackson-datatype-jsr310').versionRef('jackson')

            // quarkus
            plugin('quarkusPlugin', 'io.quarkus').versionRef('quarkus')
            library('quarkusPlaform', 'io.quarkus.platform', 'quarkus-bom').versionRef('quarkus')
            library('quarkusLiquibase', 'io.quarkus', 'quarkus-liquibase').versionRef('quarkus')
            library('quarkusArc', 'io.quarkus', 'quarkus-arc').versionRef('quarkus')
            library('quarkusJdbcMariadb', 'io.quarkus', 'quarkus-jdbc-mariadb').versionRef('quarkus')
            library('quarkusRestJackson', 'io.quarkus', 'quarkus-rest-jackson').versionRef('quarkus')
            library('quarkusSmallryeOpenapi', 'io.quarkus', 'quarkus-smallrye-openapi').versionRef('quarkus')
            library('quarkusJunit5', 'io.quarkus', 'quarkus-junit5').versionRef('quarkus')
            library('quarkusHibernateValidator', 'io.quarkus', 'quarkus-hibernate-validator').versionRef('quarkus')
            library('quarkusJunit5Mockito', 'io.quarkus', 'quarkus-junit5-mockito').versionRef('quarkus')
            library('quarkusPanacheCommon', 'io.quarkus', 'quarkus-panache-common').versionRef('quarkus')
            library('quarkusHibernateORMPanache', 'io.quarkus', 'quarkus-hibernate-orm-panache').versionRef('quarkus')

            // mariadb-java-client
            library('mariadbJavaClient', 'org.mariadb.jdbc', 'mariadb-java-client').versionRef('mariadb-java-client')

            // rest-assured
            library('restAssured', 'io.rest-assured', 'rest-assured').versionRef('rest-assured')

            // awaitility
            library('awaitility', 'org.awaitility', 'awaitility').versionRef('awaitility')

            // bundles
            bundle('quarkus', ['quarkusJdbcMariadb', 'quarkusRestJackson', 'quarkusLiquibase', 'quarkusSmallryeOpenapi', 'quarkusHibernateValidator', 'quarkusArc', 'quarkusPanacheCommon', 'quarkusHibernateORMPanache'])

            // test-bundles
            bundle('test.quarkus', ['quarkusJunit5', 'quarkusRestJackson', 'quarkusLiquibase', 'quarkusJdbcMariadb', 'quarkusSmallryeOpenapi', 'quarkusHibernateValidator', 'quarkusArc', 'quarkusJunit5Mockito'])
        }
    }
}

rootProject.name='acme-framework'